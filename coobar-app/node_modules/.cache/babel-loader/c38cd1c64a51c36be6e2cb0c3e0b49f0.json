{"remainingRequest":"c:\\Users\\web\\Desktop\\coobar1\\coobar-app\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\web\\Desktop\\coobar1\\coobar-app\\src\\main.js","dependencies":[{"path":"c:\\Users\\web\\Desktop\\coobar1\\coobar-app\\src\\main.js","mtime":1552033083461},{"path":"c:\\Users\\web\\Desktop\\coobar1\\coobar-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\web\\Desktop\\coobar1\\coobar-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nVue.config.productionTip = false; // <!-- 1、引入第三方模块axios 、element-UI-->\n\nimport axios from \"axios\";\nimport ElementUI from \"element-ui\";\nimport vueSeamless from \"vue-seamless-scroll\"; //  引入element-ui组件库的css文件\n\nimport \"element-ui/lib/theme-chalk/index.css\"; // <!-- 2、修改axios配置信息，使跨域保存在session中 -->\n\naxios.defaults.withCredentials = true; // <!-- 3、注册组件 -->\n\nVue.use(ElementUI, {\n  size: \"small\",\n  zIndex: 3000\n});\nVue.prototype.axios = axios; // 建立全局路由守卫\n\nrouter.beforeEach(function (to, from, next) {\n  var blackList = [\"/cart\"]; // 获取用户登录状态;\n\n  var isLogin = store.state.user.isLogin; // 设置进入的页面路由是否有权限进入\n\n  var path = to.path;\n\n  if (blackList.indexOf(path) >= 0) {\n    if (isLogin == false) {\n      next({\n        path: \"/login\"\n      });\n    }\n  }\n\n  next();\n});\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["c:\\Users\\web\\Desktop\\coobar1\\coobar-app\\src\\main.js"],"names":["Vue","App","router","store","config","productionTip","axios","ElementUI","vueSeamless","defaults","withCredentials","use","size","zIndex","prototype","beforeEach","to","from","next","blackList","isLogin","state","user","path","indexOf","render","h","$mount"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEAH,GAAG,CAACI,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CACE;;AACF,OAAO,sCAAP,C,CACA;;AACAF,KAAK,CAACG,QAAN,CAAeC,eAAf,GAA+B,IAA/B,C,CACA;;AACAV,GAAG,CAACW,GAAJ,CAAQJ,SAAR,EAAkB;AAACK,EAAAA,IAAI,EAAC,OAAN;AAAcC,EAAAA,MAAM,EAAC;AAArB,CAAlB;AACAb,GAAG,CAACc,SAAJ,CAAcR,KAAd,GAAoBA,KAApB,C,CACA;;AACAJ,MAAM,CAACa,UAAP,CAAkB,UAACC,EAAD,EAAIC,IAAJ,EAAUC,IAAV,EAAiB;AAC7B,MAAIC,SAAS,GAAC,CAAC,OAAD,CAAd,CAD6B,CAE7B;;AACA,MAAIC,OAAO,GAACjB,KAAK,CAACkB,KAAN,CAAYC,IAAZ,CAAiBF,OAA7B,CAH6B,CAI7B;;AACA,MAAIG,IAAI,GAACP,EAAE,CAACO,IAAZ;;AACA,MAAGJ,SAAS,CAACK,OAAV,CAAkBD,IAAlB,KAAyB,CAA5B,EAA8B;AACzB,QAAGH,OAAO,IAAE,KAAZ,EAAkB;AACdF,MAAAA,IAAI,CAAC;AAACK,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAJ;AACH;AACL;;AACCL,EAAAA,IAAI;AACX,CAZD;AAcA,IAAIlB,GAAJ,CAAQ;AACNE,EAAAA,MAAM,EAANA,MADM;AAENC,EAAAA,KAAK,EAALA,KAFM;AAGNsB,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACzB,GAAD,CAAL;AAAA;AAHH,CAAR,EAIG0B,MAJH,CAIU,MAJV","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nVue.config.productionTip = false\r\n// <!-- 1、引入第三方模块axios 、element-UI-->\r\nimport axios from \"axios\"\r\nimport ElementUI from \"element-ui\"\r\nimport vueSeamless from \"vue-seamless-scroll\";\r\n  //  引入element-ui组件库的css文件\r\nimport \"element-ui/lib/theme-chalk/index.css\"\r\n// <!-- 2、修改axios配置信息，使跨域保存在session中 -->\r\naxios.defaults.withCredentials=true;\r\n// <!-- 3、注册组件 -->\r\nVue.use(ElementUI,{size:\"small\",zIndex:3000});\r\nVue.prototype.axios=axios;\r\n// 建立全局路由守卫\r\nrouter.beforeEach((to,from ,next)=>{\r\n      var blackList=[\"/cart\"];\r\n      // 获取用户登录状态;\r\n      var isLogin=store.state.user.isLogin;\r\n      // 设置进入的页面路由是否有权限进入\r\n      var path=to.path;\r\n      if(blackList.indexOf(path)>=0){\r\n           if(isLogin==false){\r\n               next({path:\"/login\"})\r\n           }\r\n      }\r\n        next(); \r\n})\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"]}]}